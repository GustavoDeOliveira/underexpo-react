/*
 * Swagger UnderExpo - OpenAPI 3.0
 * Definição OpenAPI 3.0 para a API do projeto UnderExpo.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: gustavo.oliveira@aluno.riogrande.ifrs.edu.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.47
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Elemento model module.
 * @module model/Elemento
 * @version 0.0.1
 */
export class Elemento {
  /**
   * Constructs a new <code>Elemento</code>.
   * @alias module:model/Elemento
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Elemento</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Elemento} obj Optional instance to populate.
   * @return {module:model/Elemento} The populated <code>Elemento</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Elemento();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('titulo'))
        obj.titulo = ApiClient.convertToType(data['titulo'], 'String');
      if (data.hasOwnProperty('tipo'))
        obj.tipo = ApiClient.convertToType(data['tipo'], 'String');
      if (data.hasOwnProperty('conteudo'))
        obj.conteudo = ApiClient.convertToType(data['conteudo'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
Elemento.prototype.id = undefined;

/**
 * Texto opcional que ficará em destaque logo antes do conteúdo do elemento
 * @member {String} titulo
 */
Elemento.prototype.titulo = undefined;

/**
 * Allowed values for the <code>tipo</code> property.
 * @enum {String}
 * @readonly
 */
Elemento.TipoEnum = {
  /**
   * value: "texto"
   * @const
   */
  texto: "texto",

  /**
   * value: "imagem"
   * @const
   */
  imagem: "imagem",

  /**
   * value: "audio"
   * @const
   */
  audio: "audio",

  /**
   * value: "video"
   * @const
   */
  video: "video"
};
/**
 * tipo de elemento
 * @member {module:model/Elemento.TipoEnum} tipo
 */
Elemento.prototype.tipo = undefined;

/**
 * Dendendo do tipo do elemento pode ser texto plano, url para uma imagem, url para um arquivo de áudio ou url para um vídeo.
 * @member {String} conteudo
 */
Elemento.prototype.conteudo = undefined;

