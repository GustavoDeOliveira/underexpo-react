/*
 * Swagger UnderExpo - OpenAPI 3.0
 * Definição OpenAPI 3.0 para a API do projeto UnderExpo.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: gustavo.oliveira@aluno.riogrande.ifrs.edu.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.47
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The AtualizacaoElemento model module.
 * @module model/AtualizacaoElemento
 * @version 0.0.1
 */
export class AtualizacaoElemento {
  /**
   * Constructs a new <code>AtualizacaoElemento</code>.
   * @alias module:model/AtualizacaoElemento
   * @class
   * @param id {Number} 
   */
  constructor(id) {
    this.id = id;
  }

  /**
   * Constructs a <code>AtualizacaoElemento</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AtualizacaoElemento} obj Optional instance to populate.
   * @return {module:model/AtualizacaoElemento} The populated <code>AtualizacaoElemento</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AtualizacaoElemento();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('remover'))
        obj.remover = ApiClient.convertToType(data['remover'], 'Boolean');
      if (data.hasOwnProperty('indice'))
        obj.indice = ApiClient.convertToType(data['indice'], 'Number');
      if (data.hasOwnProperty('titulo'))
        obj.titulo = ApiClient.convertToType(data['titulo'], 'String');
      if (data.hasOwnProperty('tipo'))
        obj.tipo = ApiClient.convertToType(data['tipo'], 'String');
      if (data.hasOwnProperty('conteudo'))
        obj.conteudo = ApiClient.convertToType(data['conteudo'], 'String');
      if (data.hasOwnProperty('obraId'))
        obj.obraId = ApiClient.convertToType(data['obraId'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
AtualizacaoElemento.prototype.id = undefined;

/**
 * @member {Boolean} remover
 */
AtualizacaoElemento.prototype.remover = undefined;

/**
 * posição do elemento no painel. Se outro elemento já possui o mesmo índice, ele irá assumir a antiga posição do elemento atualizado.
 * @member {Number} indice
 */
AtualizacaoElemento.prototype.indice = undefined;

/**
 * Texto opcional que ficará em destaque logo antes do conteúdo do elemento
 * @member {String} titulo
 */
AtualizacaoElemento.prototype.titulo = undefined;

/**
 * Allowed values for the <code>tipo</code> property.
 * @enum {String}
 * @readonly
 */
AtualizacaoElemento.TipoEnum = {
  /**
   * value: "texto"
   * @const
   */
  texto: "texto",

  /**
   * value: "obra"
   * @const
   */
  obra: "obra"
};
/**
 * tipo de elemento
 * @member {module:model/AtualizacaoElemento.TipoEnum} tipo
 */
AtualizacaoElemento.prototype.tipo = undefined;

/**
 * Conteúdo de texto plano, caso o elemento seja do tipo texto.
 * @member {String} conteudo
 */
AtualizacaoElemento.prototype.conteudo = undefined;

/**
 * ID da obra que será apresentada no elemento
 * @member {Number} obraId
 */
AtualizacaoElemento.prototype.obraId = undefined;

